#. extracted from /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-23 13:00+0300\n"
"PO-Revision-Date: 2023-02-22 16:35+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 3.2.2\n"

#: /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md:2
msgid "# Factory Method"
msgstr "# Factory Method"

#: /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md:5
msgid ""
"> Определяет общий интерфейс для создания объектов в суперклассе,\n"
"> позволяя подклассам изменять тип создаваемых объектов."
msgstr ""
"> Defines a common interface for creating objects in a superclass,\n"
"> Allows subclasses to change the type of objects created."

#: /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md:8
msgid ""
"- Type: Creational\n"
"- Complexity: ⭐⭐⭐"
msgstr ""
"- Type: Creational\n"
"- Complexity: ⭐⭐⭐"

#: /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md:11
msgid ""
"Представьте что в приложении, к-е Вы разрабатываете, появилась потребность "
"динамически\n"
"создавать \"input\" эл-ты различных типов: \"text\", \"number\", \"email\" и "
"т.д."
msgstr ""
"Imagine that in the application you are developing there is a need to "
"dynamically\n"
"input\" el-ts of different types: \"text\", \"number\", \"email\", etc."

#: /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md:14
msgid ""
"Более того, данный список в будущем может быть расширен, поэтому вы не "
"хотите напрямую\n"
"зависеть от классов соответствующих эл-тов: `TextInput`, `NumberInput`, "
"`EmailInput`."
msgstr ""
"Moreover, this list may be expanded in the future, so you do not want to "
"directly\n"
"depend on the classes of the corresponding items: `TextInput`, "
"`NumberInput`, `EmailInput`."

#: /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md:17
msgid ""
"Чтобы избавится от прямой зависимости компонент от классов,\n"
"создающих инпуты, Вы решили воспользоваться паттерном \"Factory Method\"."
msgstr ""
"To get rid of the direct dependency of components on classes,\n"
"you decided to use the \"Factory Method\" pattern."

#: /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md:21
msgid ""
"Пожалуйста, реализуйте логику добавление типа инпута в классах\n"
"`TextInput`, `NumberInput`, `EmailInput`, расширив поведение метода `create` "
"в этих\n"
"подклассах:"
msgstr ""
"Please implement the logic to add the type of the incitement in the classes\n"
"`TextInput`, `NumberInput`, `EmailInput` by extending the behavior of the "
"method `create` in these\n"
"subclasses:"

#: /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md:25
msgid ""
"```js\n"
"this.element.type = 'text';\n"
"```"
msgstr ""
"```js\n"
"this.element.type = 'text';\n"
"```"

#: /Users/Shared/javascript-patterns-practice/tracks/patterns/03-factoryMethod/readme.md:27
msgid ""
"Также реализуйте логику ф-ции `inputFactory`, к-я, в зависимости от "
"входящего аргумента,\n"
"`type`, будет создавать инпут соответствующего типа."
msgstr ""
"Also implement the logic of the `inputFactory` function, which, depending on "
"the incoming argument,\n"
"`type`, will create an instance of the corresponding type."
